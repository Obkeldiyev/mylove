<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover" />
    <title>Chat Room</title>
    <link rel="manifest" href="../../../manifest.json" />
    <script src="/socket.io/socket.io.js"></script>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Inter", -apple-system, BlinkMacSystemFont, sans-serif;
        background: linear-gradient(135deg, #f9e1e6, #fce7ec);
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
        -webkit-overflow-scrolling: touch;
      }

      #home-btn {
        position: fixed;
        top: 12px;
        left: 12px;
        font-size: 22px;
        color: #e91e63;
        cursor: pointer;
        z-index: 1000;
        transition: transform 0.3s ease, color 0.3s ease;
      }

      #home-btn:hover {
        color: #c2185b;
        transform: scale(1.15) rotate(5deg);
      }

      h2 {
        text-align: center;
        color: #d81b60;
        font-size: clamp(1.4rem, 4.5vw, 1.8rem);
        padding: 0.8rem;
        font-weight: 600;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        animation: pulse 3s infinite ease-in-out;
      }

      #chat-box {
        flex: 1;
        margin: 0.8rem;
        padding: 1.2rem;
        background: rgba(255, 255, 255, 0.95);
        border-radius: 16px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
        overflow-y: auto;
        max-height: calc(100vh - 140px);
        scroll-behavior: smooth;
        -webkit-overflow-scrolling: touch;
      }

      .message {
        margin-bottom: 0.8rem;
        padding: 0.6rem 0.9rem;
        border-radius: 10px;
        background: linear-gradient(145deg, #fff0f3, #ffe4e9);
        animation: slideIn 0.3s ease-out;
        font-size: clamp(0.85rem, 2.2vw, 0.95rem);
        line-height: 1.4;
        word-wrap: break-word;
      }

      .message strong {
        color: #c2185b;
        font-weight: 600;
      }

      #typing {
        font-style: italic;
        color: #f06292;
        padding: 0.4rem 1.2rem;
        min-height: 1.4rem;
        font-size: clamp(0.8rem, 1.8vw, 0.85rem);
      }

      form#chat-form {
        display: flex;
        align-items: center;
        gap: 0.4rem;
        padding: 0.8rem;
        background: rgba(255, 255, 255, 0.9);
        box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.05);
        border-radius: 0 0 16px 16px;
        margin: 0 0.8rem 0.8rem;
        position: sticky;
        bottom: 0;
        z-index: 100;
      }

      #message-input {
        flex: 1;
        padding: 0.6rem 0.9rem;
        border: 2px solid #f48fb1;
        border-radius: 16px;
        outline: none;
        font-size: clamp(0.85rem, 2.2vw, 0.95rem);
        transition: border-color 0.3s ease, transform 0.3s ease;
        background: #fff;
      }

      #message-input:focus {
        border-color: #e91e63;
        transform: translateY(-1px);
      }

      #send-btn {
        padding: 0.6rem 1.2rem;
        border: none;
        background: #e91e63;
        color: white;
        font-size: clamp(0.85rem, 2.2vw, 0.95rem);
        border-radius: 16px;
        cursor: pointer;
        transition: background 0.3s ease, transform 0.3s ease;
      }

      #send-btn:hover {
        background: #c2185b;
        transform: translateY(-1px);
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateX(-8px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      @keyframes pulse {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.02);
        }
        100% {
          transform: scale(1);
        }
      }

      #scroll-down-btn {
        position: fixed;
        bottom: 100px;
        right: 16px;
        background: #e91e63;
        color: white;
        border: none;
        padding: 12px;
        font-size: 18px;
        border-radius: 50%;
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        display: none;
        z-index: 1000;
        transition: background 0.3s ease, transform 0.3s ease;
      }

      #scroll-down-btn:hover {
        background: #c2185b;
        transform: scale(1.1);
      }

      @media (max-width: 600px) {
        body {
          overscroll-behavior-y: contain;
        }

        #home-btn {
          font-size: 18px;
          top: 8px;
          left: 8px;
        }

        h2 {
          padding: 0.6rem;
          font-size: clamp(1.2rem, 4vw, 1.5rem);
        }

        #chat-box {
          margin: 0.4rem;
          padding: 0.8rem;
          max-height: calc(100vh - 120px);
          border-radius: 12px;
        }

        .message {
          padding: 0.5rem 0.8rem;
          font-size: clamp(0.8rem, 2vw, 0.9rem);
        }

        #chat-form {
          margin: 0 0.4rem 0.4rem;
          padding: 0.6rem;
          border-radius: 0 0 12px 12px;
        }

        #message-input {
          padding: 0.5rem 0.8rem;
          font-size: clamp(0.8rem, 2vw, 0.9rem);
        }

        #send-btn {
          padding: 0.5rem 1rem;
          font-size: clamp(0.8rem, 2vw, 0.9rem);
        }

        #scroll-down-btn {
          bottom: 80px;
          right: 12px;
          padding: 10px;
          font-size: 16px;
        }
      }
    </style>
  </head>
  <body>
    <a href="/profile" id="home-btn" title="Back to Profile">♥</a>
    <h2>Welcome to Chat, <%= username %></h2>

    <div id="chat-box">
      <% messages.forEach(msg => { %>
        <div class="message">
          <strong><%= msg.username %></strong>: <%= msg.message %>
          <small style="float: right; color: #999; font-size: 0.75em">
            <%= msg.createdAt %>
          </small>
        </div>
      <% }) %>
    </div>

    <div id="typing"></div>

    <form id="chat-form">
      <input id="message-input" type="text" placeholder="Type a message..." autocomplete="off" required />
      <button id="send-btn" type="submit">Send</button>
    </form>

    <button id="scroll-down-btn" title="Scroll to latest">⬇️</button>

    <script>
      const socket = io();
      const username = "<%= username %>";
      const chatBox = document.getElementById("chat-box");
      const input = document.getElementById("message-input");
      const form = document.getElementById("chat-form");
      const typingDiv = document.getElementById("typing");
      const scrollDownBtn = document.getElementById("scroll-down-btn");

      if (Notification && Notification.permission !== "granted") {
        Notification.requestPermission();
      }

      function showNotification(title, body) {
        if (Notification.permission === "granted") {
          new Notification(title, {
            body,
            icon: "/icons/icon-192x192.png",
          });
        }
      }

      socket.emit("join", username);

      function sendMessage() {
        const message = input.value.trim();
        if (message) {
          socket.emit("chat message", { message, username });
          input.value = "";
          typingDiv.textContent = "";
          // Keep focus on input to prevent keyboard from closing on mobile
          input.focus();
        }
      }

      form.addEventListener("submit", (e) => {
        e.preventDefault();
        sendMessage();
      });

      // Handle touch events for mobile to ensure message sending
      input.addEventListener("keydown", (e) => {
        if (e.key === "Enter" && !e.shiftKey) {
          e.preventDefault();
          sendMessage();
        }
      });

      input.addEventListener("input", () => {
        socket.emit("typing", username);
      });

      socket.on("chat message", (data) => {
        const div = document.createElement("div");
        div.classList.add("message");
        const timestamp = new Date().toLocaleTimeString();
        div.innerHTML = `
          <strong>${data.username}</strong>: ${data.message}
          <small style="float: right; color: #999; font-size: 0.75em">${timestamp}</small>
        `;
        chatBox.appendChild(div);

        const isUserNearBottom =
          chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 100;

        if (data.username === username || isUserNearBottom) {
          scrollToBottom();
        }

        if (data.username !== username) {
          showNotification(data.username, data.message);
        }
      });

      socket.on("typing", (name) => {
        if (name !== username) {
          typingDiv.textContent = `${name} is typing...`;
          setTimeout(() => (typingDiv.textContent = ""), 2000);
        }
      });

      function scrollToBottom() {
        chatBox.scrollTo({ top: chatBox.scrollHeight, behavior: "smooth" });
      }

      chatBox.addEventListener("scroll", () => {
        const nearBottom =
          chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 100;
        scrollDownBtn.style.display = nearBottom ? "none" : "block";
      });

      scrollDownBtn.addEventListener("click", scrollToBottom);

      // Ensure smooth scrolling on mobile
      chatBox.addEventListener("touchmove", () => {
        const nearBottom =
          chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 100;
        scrollDownBtn.style.display = nearBottom ? "none" : "block";
      });

      scrollToBottom();
    </script>
  </body>
</html>